<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mango.require.mapper.RequireMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.mango.require.entity.pojo.Require">
        <id column="require_id" property="requireId" />
        <result column="require_title" property="requireTitle" />
        <result column="content" property="content" />
        <result column="priority" property="priority" />
        <result column="urgent" property="urgent" />
        <result column="status" property="status" />
        <result column="create_user_id" property="createUserId" />
        <result column="create_time" property="createTime" />
        <result column="modify_user_id" property="modifyUserId" />
        <result column="modify_time" property="modifyTime" />
        <result column="parent_id" property="parentId" />
        <result column="is_del" property="isDel" />
    </resultMap>

    <!--重组映射结果-->
    <resultMap id="BaseResultMapVo" type="com.mango.require.entity.vo.RequireVo" extends="BaseResultMap">
        <result column="tag_id" property="tagId"/>
        <result column="tag_name" property="tagName"/>
        <result column="tag_desc" property="tagDesc"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        require_id, require_title, content, priority, urgent, status, create_user_id, create_time, modify_user_id, modify_time, parent_id, is_del
    </sql>

    <select id="selectAdminList" resultMap="BaseResultMapVo">
        SELECT
            r.require_id as require_id,
            r.require_title as require_title,
            r.content as content,
            r.priority as priority,
            r.urgent as urgent,
            r.status as status,
            r.create_user_id as create_user_id,
            r.create_time as create_time,
            r.modify_user_id  as modify_user_id,
            r.modify_time as modify_time,
            r.parent_id as parent_id,
            r.is_del as is_del,
            IFNULL(tag.tag_id,0) as tag_id,
            IFNULL(tag.tag_name,"") as tag_name,
            IFNULL(tag.tag_desc,"") as tag_desc
        FROM
            t_require r
        LEFT JOIN
        (SELECT any_value(tag_id) tag_id, require_id FROM t_require_tag
            WHERE 1=1
         <if test="requireAdminListCo.tagId !=null">
            and tag_id = #{requireAdminListCo.tagId}
         </if>
         GROUP BY require_id) a ON a.require_id = r.require_id
            AND r.is_del = 0
            AND r.require_id NOT IN ( SELECT require_branch_id FROM t_require_merge )
        LEFT JOIN t_tag tag ON a.tag_id = tag.tag_id
            AND tag.is_del =0
        INNER JOIN t_user u ON u.user_id = r.create_user_id
        where 1 = 1
        <if test="requireAdminListCo.requireTitle !=null and requireAdminListCo.requireTitle != ''">
            and r.require_title LIKE CONCAT('%',#{requireAdminListCo.requireTitle},'%')
        </if>
        <if test="requireAdminListCo.status !=null">
            and r.status = #{requireAdminListCo.status}
        </if>
        <if test="requireAdminListCo.tagId !=null">
            and tag.tag_id = #{requireAdminListCo.tagId}
        </if>
        order by create_time desc
    </select>

    <select id="selectList" resultMap="BaseResultMapVo">
        SELECT
        r.require_id as require_id,
        r.require_title as require_title,
        r.content as content,
        r.priority as priority,
        r.urgent as urgent,
        r.status as status,
        r.create_user_id as create_user_id,
        r.create_time as create_time,
        r.modify_user_id  as modify_user_id,
        r.modify_time as modify_time,
        r.parent_id as parent_id,
        r.is_del as is_del,
        tag.tag_id as tag_id,
        tag.tag_name as tag_name,
        tag.tag_desc as tag_desc,
        u.real_name as create_user_name
        FROM
        t_require r
        LEFT JOIN ( SELECT any_value(tag_id) tag_id, require_id FROM t_require_tag  GROUP BY require_id ) a ON a.require_id = r.require_id
        AND r.is_del = 0
        AND r.require_id NOT IN ( SELECT require_branch_id FROM t_require_merge )
        LEFT JOIN t_tag tag ON a.tag_id = tag.tag_id
        AND tag.is_del =0
        INNER JOIN t_user u ON u.user_id = r.create_user_id
        where 1 = 1
        <if test="requireListCo.priority !=null">
            and r.priority = #{requireListCo.priority}
        </if>
        <if test="requireListCo.urgent !=null">
            and r.urgent = #{requireListCo.urgent}
        </if>
        order by create_time desc
    </select>

</mapper>
